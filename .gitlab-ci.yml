stages:
  - install
  - build
  - test

variables:
  - NB_ARCHS_RUNNERS: 3

install environment:debian:
  stage: install
  tags:
    - debian
  script:
    - sudo apt install -y cmake libusb-1.0-0-dev libldap2-dev libpam0g-dev doxygen graphviz

install environment:freebsd:
  stage: install
  script:
    - sudo pkg install -y cmake openldap-client
  tags:
    - freebsd

install environment:opensuse:
  stage: install
  script:
    - sudo zypper install -y cmake libusb-1_0-devel openldap2-devel pam-devel doxygen graphviz
  tags:
    - opensuse

build default ${CI_RUNNER_TAGS}:
  parallel: ${NB_ARCHS_RUNNERS}
  allow_failure: true
  stage: build
  before_script:
    - test -d _build && test -d out || ./bootstrap
  script:
    - make
  artifacts:
    name: "default-binaries-${CI_RUNNER_TAGS}"
    paths:
      - out/deviddctl
      - out/libpam_usbwall.so
      - out/usbwalld
    expire_in: 1h
  cache:
    paths:
      - _build/
      - out/
    key: ${CI_COMMIT_REF_SLUG}-${CI_RUNNER_TAGS}

build test ${CI_RUNNER_TAGS}:
  parallel: ${NB_ARCHS_RUNNERS}
  allow_failure: true
  stage: build
  before_script:
    - test -d _build && test -d out || ./bootstrap
  script:
    - make test
  artifacts:
    name: "test-binary-${CI_RUNNER_TAGS}"
    paths:
      - out/usbwall_test
    expire_in: 1h
  cache:
    paths:
      - _build/
      - out/
    key: ${CI_COMMIT_REF_SLUG}-${CI_RUNNER_TAGS}

build doc ${CI_RUNNER_TAGS}:
  parallel: ${NB_ARCHS_RUNNERS}
  allow_failure: true
  stage: build
  before_script:
    - test -d _build && test -d out || ./bootstrap
  script:
    - make doc
  artifacts:
    name: "documentation-${CI_RUNNER_TAGS}"
    paths:
      - out/html
      - out/latex
      - out/man
    expire_in: 1h
  cache:
    paths:
      - _build/
      - out/
    key: ${CI_COMMIT_REF_SLUG}-${CI_RUNNER_TAGS}

test daemon help ${CI_RUNNER_TAGS}:
  parallel: ${NB_ARCHS_RUNNERS}
  stage: test
  script:
    - out/usbwalld -h || true

test test ${CI_RUNNER_TAGS}:
  parallel: ${NB_ARCHS_RUNNERS}
  stage: test
  script:
    - out/usbwall_test
